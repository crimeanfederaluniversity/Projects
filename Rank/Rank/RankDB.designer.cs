#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rank
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Release_")]
	public partial class RankDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertThirdLevelSubdivisionTable(ThirdLevelSubdivisionTable instance);
    partial void UpdateThirdLevelSubdivisionTable(ThirdLevelSubdivisionTable instance);
    partial void DeleteThirdLevelSubdivisionTable(ThirdLevelSubdivisionTable instance);
    partial void InsertSecondLevelSubdivisionTable(SecondLevelSubdivisionTable instance);
    partial void UpdateSecondLevelSubdivisionTable(SecondLevelSubdivisionTable instance);
    partial void DeleteSecondLevelSubdivisionTable(SecondLevelSubdivisionTable instance);
    partial void InsertFirstLevelSubdivisionTable(FirstLevelSubdivisionTable instance);
    partial void UpdateFirstLevelSubdivisionTable(FirstLevelSubdivisionTable instance);
    partial void DeleteFirstLevelSubdivisionTable(FirstLevelSubdivisionTable instance);
    partial void InsertRank_Articles(Rank_Articles instance);
    partial void UpdateRank_Articles(Rank_Articles instance);
    partial void DeleteRank_Articles(Rank_Articles instance);
    partial void InsertRank_ArticleValues(Rank_ArticleValues instance);
    partial void UpdateRank_ArticleValues(Rank_ArticleValues instance);
    partial void DeleteRank_ArticleValues(Rank_ArticleValues instance);
    partial void InsertRank_Collected_ParametrsValue(Rank_Collected_ParametrsValue instance);
    partial void UpdateRank_Collected_ParametrsValue(Rank_Collected_ParametrsValue instance);
    partial void DeleteRank_Collected_ParametrsValue(Rank_Collected_ParametrsValue instance);
    partial void InsertRank_DifficaltPoint(Rank_DifficaltPoint instance);
    partial void UpdateRank_DifficaltPoint(Rank_DifficaltPoint instance);
    partial void DeleteRank_DifficaltPoint(Rank_DifficaltPoint instance);
    partial void InsertRank_Fields(Rank_Fields instance);
    partial void UpdateRank_Fields(Rank_Fields instance);
    partial void DeleteRank_Fields(Rank_Fields instance);
    partial void InsertRank_Mark(Rank_Mark instance);
    partial void UpdateRank_Mark(Rank_Mark instance);
    partial void DeleteRank_Mark(Rank_Mark instance);
    partial void InsertRank_Parametrs(Rank_Parametrs instance);
    partial void UpdateRank_Parametrs(Rank_Parametrs instance);
    partial void DeleteRank_Parametrs(Rank_Parametrs instance);
    partial void InsertRank_StructPoints(Rank_StructPoints instance);
    partial void UpdateRank_StructPoints(Rank_StructPoints instance);
    partial void DeleteRank_StructPoints(Rank_StructPoints instance);
    partial void InsertRank_UserArticleMappingTable(Rank_UserArticleMappingTable instance);
    partial void UpdateRank_UserArticleMappingTable(Rank_UserArticleMappingTable instance);
    partial void DeleteRank_UserArticleMappingTable(Rank_UserArticleMappingTable instance);
    partial void InsertUsersTable(UsersTable instance);
    partial void UpdateUsersTable(UsersTable instance);
    partial void DeleteUsersTable(UsersTable instance);
    #endregion
		
		public RankDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Release_ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RankDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RankDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RankDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RankDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ThirdLevelSubdivisionTable> ThirdLevelSubdivisionTable
		{
			get
			{
				return this.GetTable<ThirdLevelSubdivisionTable>();
			}
		}
		
		public System.Data.Linq.Table<SecondLevelSubdivisionTable> SecondLevelSubdivisionTable
		{
			get
			{
				return this.GetTable<SecondLevelSubdivisionTable>();
			}
		}
		
		public System.Data.Linq.Table<FirstLevelSubdivisionTable> FirstLevelSubdivisionTable
		{
			get
			{
				return this.GetTable<FirstLevelSubdivisionTable>();
			}
		}
		
		public System.Data.Linq.Table<Rank_Articles> Rank_Articles
		{
			get
			{
				return this.GetTable<Rank_Articles>();
			}
		}
		
		public System.Data.Linq.Table<Rank_ArticleValues> Rank_ArticleValues
		{
			get
			{
				return this.GetTable<Rank_ArticleValues>();
			}
		}
		
		public System.Data.Linq.Table<Rank_Collected_ParametrsValue> Rank_Collected_ParametrsValue
		{
			get
			{
				return this.GetTable<Rank_Collected_ParametrsValue>();
			}
		}
		
		public System.Data.Linq.Table<Rank_DifficaltPoint> Rank_DifficaltPoint
		{
			get
			{
				return this.GetTable<Rank_DifficaltPoint>();
			}
		}
		
		public System.Data.Linq.Table<Rank_Fields> Rank_Fields
		{
			get
			{
				return this.GetTable<Rank_Fields>();
			}
		}
		
		public System.Data.Linq.Table<Rank_Mark> Rank_Mark
		{
			get
			{
				return this.GetTable<Rank_Mark>();
			}
		}
		
		public System.Data.Linq.Table<Rank_Parametrs> Rank_Parametrs
		{
			get
			{
				return this.GetTable<Rank_Parametrs>();
			}
		}
		
		public System.Data.Linq.Table<Rank_StructPoints> Rank_StructPoints
		{
			get
			{
				return this.GetTable<Rank_StructPoints>();
			}
		}
		
		public System.Data.Linq.Table<Rank_UserArticleMappingTable> Rank_UserArticleMappingTable
		{
			get
			{
				return this.GetTable<Rank_UserArticleMappingTable>();
			}
		}
		
		public System.Data.Linq.Table<Rank_UserParametrValue> Rank_UserParametrValue
		{
			get
			{
				return this.GetTable<Rank_UserParametrValue>();
			}
		}
		
		public System.Data.Linq.Table<UsersTable> UsersTable
		{
			get
			{
				return this.GetTable<UsersTable>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThirdLevelSubdivisionTable")]
	public partial class ThirdLevelSubdivisionTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThirdLevelSubdivisionTableID;
		
		private bool _Active;
		
		private string _Name;
		
		private int _FK_SecondLevelSubdivisionTable;
		
		private EntitySet<Rank_StructPoints> _Rank_StructPoints;
		
		private EntitySet<UsersTable> _UsersTable;
		
		private EntityRef<SecondLevelSubdivisionTable> _SecondLevelSubdivisionTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThirdLevelSubdivisionTableIDChanging(int value);
    partial void OnThirdLevelSubdivisionTableIDChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFK_SecondLevelSubdivisionTableChanging(int value);
    partial void OnFK_SecondLevelSubdivisionTableChanged();
    #endregion
		
		public ThirdLevelSubdivisionTable()
		{
			this._Rank_StructPoints = new EntitySet<Rank_StructPoints>(new Action<Rank_StructPoints>(this.attach_Rank_StructPoints), new Action<Rank_StructPoints>(this.detach_Rank_StructPoints));
			this._UsersTable = new EntitySet<UsersTable>(new Action<UsersTable>(this.attach_UsersTable), new Action<UsersTable>(this.detach_UsersTable));
			this._SecondLevelSubdivisionTable = default(EntityRef<SecondLevelSubdivisionTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThirdLevelSubdivisionTableID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ThirdLevelSubdivisionTableID
		{
			get
			{
				return this._ThirdLevelSubdivisionTableID;
			}
			set
			{
				if ((this._ThirdLevelSubdivisionTableID != value))
				{
					this.OnThirdLevelSubdivisionTableIDChanging(value);
					this.SendPropertyChanging();
					this._ThirdLevelSubdivisionTableID = value;
					this.SendPropertyChanged("ThirdLevelSubdivisionTableID");
					this.OnThirdLevelSubdivisionTableIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_SecondLevelSubdivisionTable", DbType="Int NOT NULL")]
		public int FK_SecondLevelSubdivisionTable
		{
			get
			{
				return this._FK_SecondLevelSubdivisionTable;
			}
			set
			{
				if ((this._FK_SecondLevelSubdivisionTable != value))
				{
					if (this._SecondLevelSubdivisionTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_SecondLevelSubdivisionTableChanging(value);
					this.SendPropertyChanging();
					this._FK_SecondLevelSubdivisionTable = value;
					this.SendPropertyChanged("FK_SecondLevelSubdivisionTable");
					this.OnFK_SecondLevelSubdivisionTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThirdLevelSubdivisionTable_Rank_StructPoints", Storage="_Rank_StructPoints", ThisKey="ThirdLevelSubdivisionTableID", OtherKey="FK_thirdlvl")]
		public EntitySet<Rank_StructPoints> Rank_StructPoints
		{
			get
			{
				return this._Rank_StructPoints;
			}
			set
			{
				this._Rank_StructPoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThirdLevelSubdivisionTable_UsersTable", Storage="_UsersTable", ThisKey="ThirdLevelSubdivisionTableID", OtherKey="FK_ThirdLevelSubdivisionTable")]
		public EntitySet<UsersTable> UsersTable
		{
			get
			{
				return this._UsersTable;
			}
			set
			{
				this._UsersTable.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecondLevelSubdivisionTable_ThirdLevelSubdivisionTable", Storage="_SecondLevelSubdivisionTable", ThisKey="FK_SecondLevelSubdivisionTable", OtherKey="SecondLevelSubdivisionTableID", IsForeignKey=true)]
		public SecondLevelSubdivisionTable SecondLevelSubdivisionTable
		{
			get
			{
				return this._SecondLevelSubdivisionTable.Entity;
			}
			set
			{
				SecondLevelSubdivisionTable previousValue = this._SecondLevelSubdivisionTable.Entity;
				if (((previousValue != value) 
							|| (this._SecondLevelSubdivisionTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecondLevelSubdivisionTable.Entity = null;
						previousValue.ThirdLevelSubdivisionTable.Remove(this);
					}
					this._SecondLevelSubdivisionTable.Entity = value;
					if ((value != null))
					{
						value.ThirdLevelSubdivisionTable.Add(this);
						this._FK_SecondLevelSubdivisionTable = value.SecondLevelSubdivisionTableID;
					}
					else
					{
						this._FK_SecondLevelSubdivisionTable = default(int);
					}
					this.SendPropertyChanged("SecondLevelSubdivisionTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rank_StructPoints(Rank_StructPoints entity)
		{
			this.SendPropertyChanging();
			entity.ThirdLevelSubdivisionTable = this;
		}
		
		private void detach_Rank_StructPoints(Rank_StructPoints entity)
		{
			this.SendPropertyChanging();
			entity.ThirdLevelSubdivisionTable = null;
		}
		
		private void attach_UsersTable(UsersTable entity)
		{
			this.SendPropertyChanging();
			entity.ThirdLevelSubdivisionTable = this;
		}
		
		private void detach_UsersTable(UsersTable entity)
		{
			this.SendPropertyChanging();
			entity.ThirdLevelSubdivisionTable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecondLevelSubdivisionTable")]
	public partial class SecondLevelSubdivisionTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SecondLevelSubdivisionTableID;
		
		private System.Nullable<bool> _Active;
		
		private string _Name;
		
		private int _FK_FirstLevelSubdivisionTable;
		
		private EntitySet<ThirdLevelSubdivisionTable> _ThirdLevelSubdivisionTable;
		
		private EntitySet<Rank_StructPoints> _Rank_StructPoints;
		
		private EntitySet<UsersTable> _UsersTable;
		
		private EntityRef<FirstLevelSubdivisionTable> _FirstLevelSubdivisionTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSecondLevelSubdivisionTableIDChanging(int value);
    partial void OnSecondLevelSubdivisionTableIDChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFK_FirstLevelSubdivisionTableChanging(int value);
    partial void OnFK_FirstLevelSubdivisionTableChanged();
    #endregion
		
		public SecondLevelSubdivisionTable()
		{
			this._ThirdLevelSubdivisionTable = new EntitySet<ThirdLevelSubdivisionTable>(new Action<ThirdLevelSubdivisionTable>(this.attach_ThirdLevelSubdivisionTable), new Action<ThirdLevelSubdivisionTable>(this.detach_ThirdLevelSubdivisionTable));
			this._Rank_StructPoints = new EntitySet<Rank_StructPoints>(new Action<Rank_StructPoints>(this.attach_Rank_StructPoints), new Action<Rank_StructPoints>(this.detach_Rank_StructPoints));
			this._UsersTable = new EntitySet<UsersTable>(new Action<UsersTable>(this.attach_UsersTable), new Action<UsersTable>(this.detach_UsersTable));
			this._FirstLevelSubdivisionTable = default(EntityRef<FirstLevelSubdivisionTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondLevelSubdivisionTableID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SecondLevelSubdivisionTableID
		{
			get
			{
				return this._SecondLevelSubdivisionTableID;
			}
			set
			{
				if ((this._SecondLevelSubdivisionTableID != value))
				{
					this.OnSecondLevelSubdivisionTableIDChanging(value);
					this.SendPropertyChanging();
					this._SecondLevelSubdivisionTableID = value;
					this.SendPropertyChanged("SecondLevelSubdivisionTableID");
					this.OnSecondLevelSubdivisionTableIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_FirstLevelSubdivisionTable", DbType="Int NOT NULL")]
		public int FK_FirstLevelSubdivisionTable
		{
			get
			{
				return this._FK_FirstLevelSubdivisionTable;
			}
			set
			{
				if ((this._FK_FirstLevelSubdivisionTable != value))
				{
					if (this._FirstLevelSubdivisionTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_FirstLevelSubdivisionTableChanging(value);
					this.SendPropertyChanging();
					this._FK_FirstLevelSubdivisionTable = value;
					this.SendPropertyChanged("FK_FirstLevelSubdivisionTable");
					this.OnFK_FirstLevelSubdivisionTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecondLevelSubdivisionTable_ThirdLevelSubdivisionTable", Storage="_ThirdLevelSubdivisionTable", ThisKey="SecondLevelSubdivisionTableID", OtherKey="FK_SecondLevelSubdivisionTable")]
		public EntitySet<ThirdLevelSubdivisionTable> ThirdLevelSubdivisionTable
		{
			get
			{
				return this._ThirdLevelSubdivisionTable;
			}
			set
			{
				this._ThirdLevelSubdivisionTable.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecondLevelSubdivisionTable_Rank_StructPoints", Storage="_Rank_StructPoints", ThisKey="SecondLevelSubdivisionTableID", OtherKey="FK_secondlvl")]
		public EntitySet<Rank_StructPoints> Rank_StructPoints
		{
			get
			{
				return this._Rank_StructPoints;
			}
			set
			{
				this._Rank_StructPoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecondLevelSubdivisionTable_UsersTable", Storage="_UsersTable", ThisKey="SecondLevelSubdivisionTableID", OtherKey="FK_SecondLevelSubdivisionTable")]
		public EntitySet<UsersTable> UsersTable
		{
			get
			{
				return this._UsersTable;
			}
			set
			{
				this._UsersTable.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FirstLevelSubdivisionTable_SecondLevelSubdivisionTable", Storage="_FirstLevelSubdivisionTable", ThisKey="FK_FirstLevelSubdivisionTable", OtherKey="FirstLevelSubdivisionTableID", IsForeignKey=true)]
		public FirstLevelSubdivisionTable FirstLevelSubdivisionTable
		{
			get
			{
				return this._FirstLevelSubdivisionTable.Entity;
			}
			set
			{
				FirstLevelSubdivisionTable previousValue = this._FirstLevelSubdivisionTable.Entity;
				if (((previousValue != value) 
							|| (this._FirstLevelSubdivisionTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FirstLevelSubdivisionTable.Entity = null;
						previousValue.SecondLevelSubdivisionTable.Remove(this);
					}
					this._FirstLevelSubdivisionTable.Entity = value;
					if ((value != null))
					{
						value.SecondLevelSubdivisionTable.Add(this);
						this._FK_FirstLevelSubdivisionTable = value.FirstLevelSubdivisionTableID;
					}
					else
					{
						this._FK_FirstLevelSubdivisionTable = default(int);
					}
					this.SendPropertyChanged("FirstLevelSubdivisionTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThirdLevelSubdivisionTable(ThirdLevelSubdivisionTable entity)
		{
			this.SendPropertyChanging();
			entity.SecondLevelSubdivisionTable = this;
		}
		
		private void detach_ThirdLevelSubdivisionTable(ThirdLevelSubdivisionTable entity)
		{
			this.SendPropertyChanging();
			entity.SecondLevelSubdivisionTable = null;
		}
		
		private void attach_Rank_StructPoints(Rank_StructPoints entity)
		{
			this.SendPropertyChanging();
			entity.SecondLevelSubdivisionTable = this;
		}
		
		private void detach_Rank_StructPoints(Rank_StructPoints entity)
		{
			this.SendPropertyChanging();
			entity.SecondLevelSubdivisionTable = null;
		}
		
		private void attach_UsersTable(UsersTable entity)
		{
			this.SendPropertyChanging();
			entity.SecondLevelSubdivisionTable = this;
		}
		
		private void detach_UsersTable(UsersTable entity)
		{
			this.SendPropertyChanging();
			entity.SecondLevelSubdivisionTable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FirstLevelSubdivisionTable")]
	public partial class FirstLevelSubdivisionTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FirstLevelSubdivisionTableID;
		
		private bool _Active;
		
		private string _Name;
		
		private System.Nullable<int> _FK_ZeroLevelSubvisionTable;
		
		private string _AbbRu;
		
		private EntitySet<SecondLevelSubdivisionTable> _SecondLevelSubdivisionTable;
		
		private EntitySet<Rank_StructPoints> _Rank_StructPoints;
		
		private EntitySet<UsersTable> _UsersTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFirstLevelSubdivisionTableIDChanging(int value);
    partial void OnFirstLevelSubdivisionTableIDChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFK_ZeroLevelSubvisionTableChanging(System.Nullable<int> value);
    partial void OnFK_ZeroLevelSubvisionTableChanged();
    partial void OnAbbRuChanging(string value);
    partial void OnAbbRuChanged();
    #endregion
		
		public FirstLevelSubdivisionTable()
		{
			this._SecondLevelSubdivisionTable = new EntitySet<SecondLevelSubdivisionTable>(new Action<SecondLevelSubdivisionTable>(this.attach_SecondLevelSubdivisionTable), new Action<SecondLevelSubdivisionTable>(this.detach_SecondLevelSubdivisionTable));
			this._Rank_StructPoints = new EntitySet<Rank_StructPoints>(new Action<Rank_StructPoints>(this.attach_Rank_StructPoints), new Action<Rank_StructPoints>(this.detach_Rank_StructPoints));
			this._UsersTable = new EntitySet<UsersTable>(new Action<UsersTable>(this.attach_UsersTable), new Action<UsersTable>(this.detach_UsersTable));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstLevelSubdivisionTableID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FirstLevelSubdivisionTableID
		{
			get
			{
				return this._FirstLevelSubdivisionTableID;
			}
			set
			{
				if ((this._FirstLevelSubdivisionTableID != value))
				{
					this.OnFirstLevelSubdivisionTableIDChanging(value);
					this.SendPropertyChanging();
					this._FirstLevelSubdivisionTableID = value;
					this.SendPropertyChanged("FirstLevelSubdivisionTableID");
					this.OnFirstLevelSubdivisionTableIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_ZeroLevelSubvisionTable", DbType="Int")]
		public System.Nullable<int> FK_ZeroLevelSubvisionTable
		{
			get
			{
				return this._FK_ZeroLevelSubvisionTable;
			}
			set
			{
				if ((this._FK_ZeroLevelSubvisionTable != value))
				{
					this.OnFK_ZeroLevelSubvisionTableChanging(value);
					this.SendPropertyChanging();
					this._FK_ZeroLevelSubvisionTable = value;
					this.SendPropertyChanged("FK_ZeroLevelSubvisionTable");
					this.OnFK_ZeroLevelSubvisionTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbbRu", DbType="VarChar(50)")]
		public string AbbRu
		{
			get
			{
				return this._AbbRu;
			}
			set
			{
				if ((this._AbbRu != value))
				{
					this.OnAbbRuChanging(value);
					this.SendPropertyChanging();
					this._AbbRu = value;
					this.SendPropertyChanged("AbbRu");
					this.OnAbbRuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FirstLevelSubdivisionTable_SecondLevelSubdivisionTable", Storage="_SecondLevelSubdivisionTable", ThisKey="FirstLevelSubdivisionTableID", OtherKey="FK_FirstLevelSubdivisionTable")]
		public EntitySet<SecondLevelSubdivisionTable> SecondLevelSubdivisionTable
		{
			get
			{
				return this._SecondLevelSubdivisionTable;
			}
			set
			{
				this._SecondLevelSubdivisionTable.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FirstLevelSubdivisionTable_Rank_StructPoints", Storage="_Rank_StructPoints", ThisKey="FirstLevelSubdivisionTableID", OtherKey="FK_firstlvl")]
		public EntitySet<Rank_StructPoints> Rank_StructPoints
		{
			get
			{
				return this._Rank_StructPoints;
			}
			set
			{
				this._Rank_StructPoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FirstLevelSubdivisionTable_UsersTable", Storage="_UsersTable", ThisKey="FirstLevelSubdivisionTableID", OtherKey="FK_FirstLevelSubdivisionTable")]
		public EntitySet<UsersTable> UsersTable
		{
			get
			{
				return this._UsersTable;
			}
			set
			{
				this._UsersTable.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SecondLevelSubdivisionTable(SecondLevelSubdivisionTable entity)
		{
			this.SendPropertyChanging();
			entity.FirstLevelSubdivisionTable = this;
		}
		
		private void detach_SecondLevelSubdivisionTable(SecondLevelSubdivisionTable entity)
		{
			this.SendPropertyChanging();
			entity.FirstLevelSubdivisionTable = null;
		}
		
		private void attach_Rank_StructPoints(Rank_StructPoints entity)
		{
			this.SendPropertyChanging();
			entity.FirstLevelSubdivisionTable = this;
		}
		
		private void detach_Rank_StructPoints(Rank_StructPoints entity)
		{
			this.SendPropertyChanging();
			entity.FirstLevelSubdivisionTable = null;
		}
		
		private void attach_UsersTable(UsersTable entity)
		{
			this.SendPropertyChanging();
			entity.FirstLevelSubdivisionTable = this;
		}
		
		private void detach_UsersTable(UsersTable entity)
		{
			this.SendPropertyChanging();
			entity.FirstLevelSubdivisionTable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rank_Articles")]
	public partial class Rank_Articles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<bool> _Active;
		
		private string _Name;
		
		private System.Nullable<int> _FK_parametr;
		
		private System.Nullable<System.DateTime> _AddDate;
		
		private string _Filename;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<int> _FK_mark;
		
		private EntityRef<Rank_ArticleValues> _Rank_ArticleValues;
		
		private EntitySet<Rank_UserArticleMappingTable> _Rank_UserArticleMappingTable;
		
		private EntityRef<Rank_Mark> _Rank_Mark;
		
		private EntityRef<Rank_Parametrs> _Rank_Parametrs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFK_parametrChanging(System.Nullable<int> value);
    partial void OnFK_parametrChanged();
    partial void OnAddDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAddDateChanged();
    partial void OnFilenameChanging(string value);
    partial void OnFilenameChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnFK_markChanging(System.Nullable<int> value);
    partial void OnFK_markChanged();
    #endregion
		
		public Rank_Articles()
		{
			this._Rank_ArticleValues = default(EntityRef<Rank_ArticleValues>);
			this._Rank_UserArticleMappingTable = new EntitySet<Rank_UserArticleMappingTable>(new Action<Rank_UserArticleMappingTable>(this.attach_Rank_UserArticleMappingTable), new Action<Rank_UserArticleMappingTable>(this.detach_Rank_UserArticleMappingTable));
			this._Rank_Mark = default(EntityRef<Rank_Mark>);
			this._Rank_Parametrs = default(EntityRef<Rank_Parametrs>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_parametr", DbType="Int")]
		public System.Nullable<int> FK_parametr
		{
			get
			{
				return this._FK_parametr;
			}
			set
			{
				if ((this._FK_parametr != value))
				{
					if (this._Rank_Parametrs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_parametrChanging(value);
					this.SendPropertyChanging();
					this._FK_parametr = value;
					this.SendPropertyChanged("FK_parametr");
					this.OnFK_parametrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddDate
		{
			get
			{
				return this._AddDate;
			}
			set
			{
				if ((this._AddDate != value))
				{
					this.OnAddDateChanging(value);
					this.SendPropertyChanging();
					this._AddDate = value;
					this.SendPropertyChanged("AddDate");
					this.OnAddDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filename", DbType="NVarChar(MAX)")]
		public string Filename
		{
			get
			{
				return this._Filename;
			}
			set
			{
				if ((this._Filename != value))
				{
					this.OnFilenameChanging(value);
					this.SendPropertyChanging();
					this._Filename = value;
					this.SendPropertyChanged("Filename");
					this.OnFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_mark", DbType="Int")]
		public System.Nullable<int> FK_mark
		{
			get
			{
				return this._FK_mark;
			}
			set
			{
				if ((this._FK_mark != value))
				{
					if (this._Rank_Mark.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_markChanging(value);
					this.SendPropertyChanging();
					this._FK_mark = value;
					this.SendPropertyChanged("FK_mark");
					this.OnFK_markChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_Articles_Rank_ArticleValues", Storage="_Rank_ArticleValues", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Rank_ArticleValues Rank_ArticleValues
		{
			get
			{
				return this._Rank_ArticleValues.Entity;
			}
			set
			{
				Rank_ArticleValues previousValue = this._Rank_ArticleValues.Entity;
				if (((previousValue != value) 
							|| (this._Rank_ArticleValues.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rank_ArticleValues.Entity = null;
						previousValue.Rank_Articles = null;
					}
					this._Rank_ArticleValues.Entity = value;
					if ((value != null))
					{
						value.Rank_Articles = this;
					}
					this.SendPropertyChanged("Rank_ArticleValues");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_Articles_Rank_UserArticleMappingTable", Storage="_Rank_UserArticleMappingTable", ThisKey="ID", OtherKey="FK_Article")]
		public EntitySet<Rank_UserArticleMappingTable> Rank_UserArticleMappingTable
		{
			get
			{
				return this._Rank_UserArticleMappingTable;
			}
			set
			{
				this._Rank_UserArticleMappingTable.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_Mark_Rank_Articles", Storage="_Rank_Mark", ThisKey="FK_mark", OtherKey="ID", IsForeignKey=true)]
		public Rank_Mark Rank_Mark
		{
			get
			{
				return this._Rank_Mark.Entity;
			}
			set
			{
				Rank_Mark previousValue = this._Rank_Mark.Entity;
				if (((previousValue != value) 
							|| (this._Rank_Mark.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rank_Mark.Entity = null;
						previousValue.Rank_Articles.Remove(this);
					}
					this._Rank_Mark.Entity = value;
					if ((value != null))
					{
						value.Rank_Articles.Add(this);
						this._FK_mark = value.ID;
					}
					else
					{
						this._FK_mark = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rank_Mark");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_Parametrs_Rank_Articles", Storage="_Rank_Parametrs", ThisKey="FK_parametr", OtherKey="ID", IsForeignKey=true)]
		public Rank_Parametrs Rank_Parametrs
		{
			get
			{
				return this._Rank_Parametrs.Entity;
			}
			set
			{
				Rank_Parametrs previousValue = this._Rank_Parametrs.Entity;
				if (((previousValue != value) 
							|| (this._Rank_Parametrs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rank_Parametrs.Entity = null;
						previousValue.Rank_Articles.Remove(this);
					}
					this._Rank_Parametrs.Entity = value;
					if ((value != null))
					{
						value.Rank_Articles.Add(this);
						this._FK_parametr = value.ID;
					}
					else
					{
						this._FK_parametr = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rank_Parametrs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rank_UserArticleMappingTable(Rank_UserArticleMappingTable entity)
		{
			this.SendPropertyChanging();
			entity.Rank_Articles = this;
		}
		
		private void detach_Rank_UserArticleMappingTable(Rank_UserArticleMappingTable entity)
		{
			this.SendPropertyChanging();
			entity.Rank_Articles = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rank_ArticleValues")]
	public partial class Rank_ArticleValues : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<int> _FK_Article;
		
		private System.Nullable<int> _FK_Field;
		
		private string _Value;
		
		private System.Nullable<int> _FK_Param;
		
		private EntityRef<Rank_Articles> _Rank_Articles;
		
		private EntityRef<Rank_Fields> _Rank_Fields;
		
		private EntityRef<Rank_Parametrs> _Rank_Parametrs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnFK_ArticleChanging(System.Nullable<int> value);
    partial void OnFK_ArticleChanged();
    partial void OnFK_FieldChanging(System.Nullable<int> value);
    partial void OnFK_FieldChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnFK_ParamChanging(System.Nullable<int> value);
    partial void OnFK_ParamChanged();
    #endregion
		
		public Rank_ArticleValues()
		{
			this._Rank_Articles = default(EntityRef<Rank_Articles>);
			this._Rank_Fields = default(EntityRef<Rank_Fields>);
			this._Rank_Parametrs = default(EntityRef<Rank_Parametrs>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Rank_Articles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Article", DbType="Int")]
		public System.Nullable<int> FK_Article
		{
			get
			{
				return this._FK_Article;
			}
			set
			{
				if ((this._FK_Article != value))
				{
					this.OnFK_ArticleChanging(value);
					this.SendPropertyChanging();
					this._FK_Article = value;
					this.SendPropertyChanged("FK_Article");
					this.OnFK_ArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Field", DbType="Int")]
		public System.Nullable<int> FK_Field
		{
			get
			{
				return this._FK_Field;
			}
			set
			{
				if ((this._FK_Field != value))
				{
					if (this._Rank_Fields.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_FieldChanging(value);
					this.SendPropertyChanging();
					this._FK_Field = value;
					this.SendPropertyChanged("FK_Field");
					this.OnFK_FieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(MAX)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Param", DbType="Int")]
		public System.Nullable<int> FK_Param
		{
			get
			{
				return this._FK_Param;
			}
			set
			{
				if ((this._FK_Param != value))
				{
					if (this._Rank_Parametrs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_ParamChanging(value);
					this.SendPropertyChanging();
					this._FK_Param = value;
					this.SendPropertyChanged("FK_Param");
					this.OnFK_ParamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_Articles_Rank_ArticleValues", Storage="_Rank_Articles", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Rank_Articles Rank_Articles
		{
			get
			{
				return this._Rank_Articles.Entity;
			}
			set
			{
				Rank_Articles previousValue = this._Rank_Articles.Entity;
				if (((previousValue != value) 
							|| (this._Rank_Articles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rank_Articles.Entity = null;
						previousValue.Rank_ArticleValues = null;
					}
					this._Rank_Articles.Entity = value;
					if ((value != null))
					{
						value.Rank_ArticleValues = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("Rank_Articles");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_Fields_Rank_ArticleValues", Storage="_Rank_Fields", ThisKey="FK_Field", OtherKey="ID", IsForeignKey=true)]
		public Rank_Fields Rank_Fields
		{
			get
			{
				return this._Rank_Fields.Entity;
			}
			set
			{
				Rank_Fields previousValue = this._Rank_Fields.Entity;
				if (((previousValue != value) 
							|| (this._Rank_Fields.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rank_Fields.Entity = null;
						previousValue.Rank_ArticleValues.Remove(this);
					}
					this._Rank_Fields.Entity = value;
					if ((value != null))
					{
						value.Rank_ArticleValues.Add(this);
						this._FK_Field = value.ID;
					}
					else
					{
						this._FK_Field = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rank_Fields");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_Parametrs_Rank_ArticleValues", Storage="_Rank_Parametrs", ThisKey="FK_Param", OtherKey="ID", IsForeignKey=true)]
		public Rank_Parametrs Rank_Parametrs
		{
			get
			{
				return this._Rank_Parametrs.Entity;
			}
			set
			{
				Rank_Parametrs previousValue = this._Rank_Parametrs.Entity;
				if (((previousValue != value) 
							|| (this._Rank_Parametrs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rank_Parametrs.Entity = null;
						previousValue.Rank_ArticleValues.Remove(this);
					}
					this._Rank_Parametrs.Entity = value;
					if ((value != null))
					{
						value.Rank_ArticleValues.Add(this);
						this._FK_Param = value.ID;
					}
					else
					{
						this._FK_Param = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rank_Parametrs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rank_Collected_ParametrsValue")]
	public partial class Rank_Collected_ParametrsValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<int> _FK_Parametrs;
		
		private System.Nullable<int> _FK_Autor;
		
		private System.Nullable<double> _Value;
		
		private System.Nullable<int> _Status;
		
		private EntityRef<Rank_Parametrs> _Rank_Parametrs;
		
		private EntityRef<UsersTable> _UsersTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnFK_ParametrsChanging(System.Nullable<int> value);
    partial void OnFK_ParametrsChanged();
    partial void OnFK_AutorChanging(System.Nullable<int> value);
    partial void OnFK_AutorChanged();
    partial void OnValueChanging(System.Nullable<double> value);
    partial void OnValueChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
		
		public Rank_Collected_ParametrsValue()
		{
			this._Rank_Parametrs = default(EntityRef<Rank_Parametrs>);
			this._UsersTable = default(EntityRef<UsersTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Parametrs", DbType="Int")]
		public System.Nullable<int> FK_Parametrs
		{
			get
			{
				return this._FK_Parametrs;
			}
			set
			{
				if ((this._FK_Parametrs != value))
				{
					if (this._Rank_Parametrs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_ParametrsChanging(value);
					this.SendPropertyChanging();
					this._FK_Parametrs = value;
					this.SendPropertyChanged("FK_Parametrs");
					this.OnFK_ParametrsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Autor", DbType="Int")]
		public System.Nullable<int> FK_Autor
		{
			get
			{
				return this._FK_Autor;
			}
			set
			{
				if ((this._FK_Autor != value))
				{
					if (this._UsersTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_AutorChanging(value);
					this.SendPropertyChanging();
					this._FK_Autor = value;
					this.SendPropertyChanged("FK_Autor");
					this.OnFK_AutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Float")]
		public System.Nullable<double> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_Parametrs_Rank_Collected_ParametrsValue", Storage="_Rank_Parametrs", ThisKey="FK_Parametrs", OtherKey="ID", IsForeignKey=true)]
		public Rank_Parametrs Rank_Parametrs
		{
			get
			{
				return this._Rank_Parametrs.Entity;
			}
			set
			{
				Rank_Parametrs previousValue = this._Rank_Parametrs.Entity;
				if (((previousValue != value) 
							|| (this._Rank_Parametrs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rank_Parametrs.Entity = null;
						previousValue.Rank_Collected_ParametrsValue.Remove(this);
					}
					this._Rank_Parametrs.Entity = value;
					if ((value != null))
					{
						value.Rank_Collected_ParametrsValue.Add(this);
						this._FK_Parametrs = value.ID;
					}
					else
					{
						this._FK_Parametrs = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rank_Parametrs");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsersTable_Rank_Collected_ParametrsValue", Storage="_UsersTable", ThisKey="FK_Autor", OtherKey="UsersTableID", IsForeignKey=true)]
		public UsersTable UsersTable
		{
			get
			{
				return this._UsersTable.Entity;
			}
			set
			{
				UsersTable previousValue = this._UsersTable.Entity;
				if (((previousValue != value) 
							|| (this._UsersTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UsersTable.Entity = null;
						previousValue.Rank_Collected_ParametrsValue.Remove(this);
					}
					this._UsersTable.Entity = value;
					if ((value != null))
					{
						value.Rank_Collected_ParametrsValue.Add(this);
						this._FK_Autor = value.UsersTableID;
					}
					else
					{
						this._FK_Autor = default(Nullable<int>);
					}
					this.SendPropertyChanged("UsersTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rank_DifficaltPoint")]
	public partial class Rank_DifficaltPoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<bool> _Active;
		
		private string _Name;
		
		private System.Nullable<double> _Value;
		
		private System.Nullable<int> _fk_parametr;
		
		private EntitySet<Rank_UserArticleMappingTable> _Rank_UserArticleMappingTable;
		
		private EntityRef<Rank_Parametrs> _Rank_Parametrs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(System.Nullable<double> value);
    partial void OnValueChanged();
    partial void Onfk_parametrChanging(System.Nullable<int> value);
    partial void Onfk_parametrChanged();
    #endregion
		
		public Rank_DifficaltPoint()
		{
			this._Rank_UserArticleMappingTable = new EntitySet<Rank_UserArticleMappingTable>(new Action<Rank_UserArticleMappingTable>(this.attach_Rank_UserArticleMappingTable), new Action<Rank_UserArticleMappingTable>(this.detach_Rank_UserArticleMappingTable));
			this._Rank_Parametrs = default(EntityRef<Rank_Parametrs>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Float")]
		public System.Nullable<double> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_parametr", DbType="Int")]
		public System.Nullable<int> fk_parametr
		{
			get
			{
				return this._fk_parametr;
			}
			set
			{
				if ((this._fk_parametr != value))
				{
					if (this._Rank_Parametrs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_parametrChanging(value);
					this.SendPropertyChanging();
					this._fk_parametr = value;
					this.SendPropertyChanged("fk_parametr");
					this.Onfk_parametrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_DifficaltPoint_Rank_UserArticleMappingTable", Storage="_Rank_UserArticleMappingTable", ThisKey="ID", OtherKey="FK_point")]
		public EntitySet<Rank_UserArticleMappingTable> Rank_UserArticleMappingTable
		{
			get
			{
				return this._Rank_UserArticleMappingTable;
			}
			set
			{
				this._Rank_UserArticleMappingTable.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_Parametrs_Rank_DifficaltPoint", Storage="_Rank_Parametrs", ThisKey="fk_parametr", OtherKey="ID", IsForeignKey=true)]
		public Rank_Parametrs Rank_Parametrs
		{
			get
			{
				return this._Rank_Parametrs.Entity;
			}
			set
			{
				Rank_Parametrs previousValue = this._Rank_Parametrs.Entity;
				if (((previousValue != value) 
							|| (this._Rank_Parametrs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rank_Parametrs.Entity = null;
						previousValue.Rank_DifficaltPoint.Remove(this);
					}
					this._Rank_Parametrs.Entity = value;
					if ((value != null))
					{
						value.Rank_DifficaltPoint.Add(this);
						this._fk_parametr = value.ID;
					}
					else
					{
						this._fk_parametr = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rank_Parametrs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rank_UserArticleMappingTable(Rank_UserArticleMappingTable entity)
		{
			this.SendPropertyChanging();
			entity.Rank_DifficaltPoint = this;
		}
		
		private void detach_Rank_UserArticleMappingTable(Rank_UserArticleMappingTable entity)
		{
			this.SendPropertyChanging();
			entity.Rank_DifficaltPoint = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rank_Fields")]
	public partial class Rank_Fields : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<bool> _Active;
		
		private string _Name;
		
		private System.Nullable<int> _FK_parametr;
		
		private int _line;
		
		private System.Nullable<int> _col;
		
		private System.Nullable<int> _step;
		
		private int _high;
		
		private int _width;
		
		private string _type;
		
		private EntitySet<Rank_ArticleValues> _Rank_ArticleValues;
		
		private EntityRef<Rank_Parametrs> _Rank_Parametrs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFK_parametrChanging(System.Nullable<int> value);
    partial void OnFK_parametrChanged();
    partial void OnlineChanging(int value);
    partial void OnlineChanged();
    partial void OncolChanging(System.Nullable<int> value);
    partial void OncolChanged();
    partial void OnstepChanging(System.Nullable<int> value);
    partial void OnstepChanged();
    partial void OnhighChanging(int value);
    partial void OnhighChanged();
    partial void OnwidthChanging(int value);
    partial void OnwidthChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public Rank_Fields()
		{
			this._Rank_ArticleValues = new EntitySet<Rank_ArticleValues>(new Action<Rank_ArticleValues>(this.attach_Rank_ArticleValues), new Action<Rank_ArticleValues>(this.detach_Rank_ArticleValues));
			this._Rank_Parametrs = default(EntityRef<Rank_Parametrs>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_parametr", DbType="Int")]
		public System.Nullable<int> FK_parametr
		{
			get
			{
				return this._FK_parametr;
			}
			set
			{
				if ((this._FK_parametr != value))
				{
					if (this._Rank_Parametrs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_parametrChanging(value);
					this.SendPropertyChanging();
					this._FK_parametr = value;
					this.SendPropertyChanged("FK_parametr");
					this.OnFK_parametrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_line", DbType="Int NOT NULL")]
		public int line
		{
			get
			{
				return this._line;
			}
			set
			{
				if ((this._line != value))
				{
					this.OnlineChanging(value);
					this.SendPropertyChanging();
					this._line = value;
					this.SendPropertyChanged("line");
					this.OnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_col", DbType="Int")]
		public System.Nullable<int> col
		{
			get
			{
				return this._col;
			}
			set
			{
				if ((this._col != value))
				{
					this.OncolChanging(value);
					this.SendPropertyChanging();
					this._col = value;
					this.SendPropertyChanged("col");
					this.OncolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_step", DbType="Int")]
		public System.Nullable<int> step
		{
			get
			{
				return this._step;
			}
			set
			{
				if ((this._step != value))
				{
					this.OnstepChanging(value);
					this.SendPropertyChanging();
					this._step = value;
					this.SendPropertyChanged("step");
					this.OnstepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_high", DbType="Int NOT NULL")]
		public int high
		{
			get
			{
				return this._high;
			}
			set
			{
				if ((this._high != value))
				{
					this.OnhighChanging(value);
					this.SendPropertyChanging();
					this._high = value;
					this.SendPropertyChanged("high");
					this.OnhighChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_width", DbType="Int NOT NULL")]
		public int width
		{
			get
			{
				return this._width;
			}
			set
			{
				if ((this._width != value))
				{
					this.OnwidthChanging(value);
					this.SendPropertyChanging();
					this._width = value;
					this.SendPropertyChanged("width");
					this.OnwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NChar(10)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_Fields_Rank_ArticleValues", Storage="_Rank_ArticleValues", ThisKey="ID", OtherKey="FK_Field")]
		public EntitySet<Rank_ArticleValues> Rank_ArticleValues
		{
			get
			{
				return this._Rank_ArticleValues;
			}
			set
			{
				this._Rank_ArticleValues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_Parametrs_Rank_Fields", Storage="_Rank_Parametrs", ThisKey="FK_parametr", OtherKey="ID", IsForeignKey=true)]
		public Rank_Parametrs Rank_Parametrs
		{
			get
			{
				return this._Rank_Parametrs.Entity;
			}
			set
			{
				Rank_Parametrs previousValue = this._Rank_Parametrs.Entity;
				if (((previousValue != value) 
							|| (this._Rank_Parametrs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rank_Parametrs.Entity = null;
						previousValue.Rank_Fields.Remove(this);
					}
					this._Rank_Parametrs.Entity = value;
					if ((value != null))
					{
						value.Rank_Fields.Add(this);
						this._FK_parametr = value.ID;
					}
					else
					{
						this._FK_parametr = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rank_Parametrs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rank_ArticleValues(Rank_ArticleValues entity)
		{
			this.SendPropertyChanging();
			entity.Rank_Fields = this;
		}
		
		private void detach_Rank_ArticleValues(Rank_ArticleValues entity)
		{
			this.SendPropertyChanging();
			entity.Rank_Fields = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rank_Mark")]
	public partial class Rank_Mark : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<bool> _Active;
		
		private string _Name;
		
		private System.Nullable<int> _Points;
		
		private System.Nullable<int> _fk_parametr;
		
		private EntitySet<Rank_Articles> _Rank_Articles;
		
		private EntityRef<Rank_Parametrs> _Rank_Parametrs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPointsChanging(System.Nullable<int> value);
    partial void OnPointsChanged();
    partial void Onfk_parametrChanging(System.Nullable<int> value);
    partial void Onfk_parametrChanged();
    #endregion
		
		public Rank_Mark()
		{
			this._Rank_Articles = new EntitySet<Rank_Articles>(new Action<Rank_Articles>(this.attach_Rank_Articles), new Action<Rank_Articles>(this.detach_Rank_Articles));
			this._Rank_Parametrs = default(EntityRef<Rank_Parametrs>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(300)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Points", DbType="Int")]
		public System.Nullable<int> Points
		{
			get
			{
				return this._Points;
			}
			set
			{
				if ((this._Points != value))
				{
					this.OnPointsChanging(value);
					this.SendPropertyChanging();
					this._Points = value;
					this.SendPropertyChanged("Points");
					this.OnPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_parametr", DbType="Int")]
		public System.Nullable<int> fk_parametr
		{
			get
			{
				return this._fk_parametr;
			}
			set
			{
				if ((this._fk_parametr != value))
				{
					if (this._Rank_Parametrs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_parametrChanging(value);
					this.SendPropertyChanging();
					this._fk_parametr = value;
					this.SendPropertyChanged("fk_parametr");
					this.Onfk_parametrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_Mark_Rank_Articles", Storage="_Rank_Articles", ThisKey="ID", OtherKey="FK_mark")]
		public EntitySet<Rank_Articles> Rank_Articles
		{
			get
			{
				return this._Rank_Articles;
			}
			set
			{
				this._Rank_Articles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_Parametrs_Rank_Mark", Storage="_Rank_Parametrs", ThisKey="fk_parametr", OtherKey="ID", IsForeignKey=true)]
		public Rank_Parametrs Rank_Parametrs
		{
			get
			{
				return this._Rank_Parametrs.Entity;
			}
			set
			{
				Rank_Parametrs previousValue = this._Rank_Parametrs.Entity;
				if (((previousValue != value) 
							|| (this._Rank_Parametrs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rank_Parametrs.Entity = null;
						previousValue.Rank_Mark.Remove(this);
					}
					this._Rank_Parametrs.Entity = value;
					if ((value != null))
					{
						value.Rank_Mark.Add(this);
						this._fk_parametr = value.ID;
					}
					else
					{
						this._fk_parametr = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rank_Parametrs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rank_Articles(Rank_Articles entity)
		{
			this.SendPropertyChanging();
			entity.Rank_Mark = this;
		}
		
		private void detach_Rank_Articles(Rank_Articles entity)
		{
			this.SendPropertyChanging();
			entity.Rank_Mark = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rank_Parametrs")]
	public partial class Rank_Parametrs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<bool> _Active;
		
		private string _Name;
		
		private string _Amount;
		
		private string _Formula;
		
		private EntitySet<Rank_Articles> _Rank_Articles;
		
		private EntitySet<Rank_ArticleValues> _Rank_ArticleValues;
		
		private EntitySet<Rank_Collected_ParametrsValue> _Rank_Collected_ParametrsValue;
		
		private EntitySet<Rank_DifficaltPoint> _Rank_DifficaltPoint;
		
		private EntitySet<Rank_Fields> _Rank_Fields;
		
		private EntitySet<Rank_Mark> _Rank_Mark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    partial void OnFormulaChanging(string value);
    partial void OnFormulaChanged();
    #endregion
		
		public Rank_Parametrs()
		{
			this._Rank_Articles = new EntitySet<Rank_Articles>(new Action<Rank_Articles>(this.attach_Rank_Articles), new Action<Rank_Articles>(this.detach_Rank_Articles));
			this._Rank_ArticleValues = new EntitySet<Rank_ArticleValues>(new Action<Rank_ArticleValues>(this.attach_Rank_ArticleValues), new Action<Rank_ArticleValues>(this.detach_Rank_ArticleValues));
			this._Rank_Collected_ParametrsValue = new EntitySet<Rank_Collected_ParametrsValue>(new Action<Rank_Collected_ParametrsValue>(this.attach_Rank_Collected_ParametrsValue), new Action<Rank_Collected_ParametrsValue>(this.detach_Rank_Collected_ParametrsValue));
			this._Rank_DifficaltPoint = new EntitySet<Rank_DifficaltPoint>(new Action<Rank_DifficaltPoint>(this.attach_Rank_DifficaltPoint), new Action<Rank_DifficaltPoint>(this.detach_Rank_DifficaltPoint));
			this._Rank_Fields = new EntitySet<Rank_Fields>(new Action<Rank_Fields>(this.attach_Rank_Fields), new Action<Rank_Fields>(this.detach_Rank_Fields));
			this._Rank_Mark = new EntitySet<Rank_Mark>(new Action<Rank_Mark>(this.attach_Rank_Mark), new Action<Rank_Mark>(this.detach_Rank_Mark));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(300)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Formula", DbType="VarChar(100)")]
		public string Formula
		{
			get
			{
				return this._Formula;
			}
			set
			{
				if ((this._Formula != value))
				{
					this.OnFormulaChanging(value);
					this.SendPropertyChanging();
					this._Formula = value;
					this.SendPropertyChanged("Formula");
					this.OnFormulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_Parametrs_Rank_Articles", Storage="_Rank_Articles", ThisKey="ID", OtherKey="FK_parametr")]
		public EntitySet<Rank_Articles> Rank_Articles
		{
			get
			{
				return this._Rank_Articles;
			}
			set
			{
				this._Rank_Articles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_Parametrs_Rank_ArticleValues", Storage="_Rank_ArticleValues", ThisKey="ID", OtherKey="FK_Param")]
		public EntitySet<Rank_ArticleValues> Rank_ArticleValues
		{
			get
			{
				return this._Rank_ArticleValues;
			}
			set
			{
				this._Rank_ArticleValues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_Parametrs_Rank_Collected_ParametrsValue", Storage="_Rank_Collected_ParametrsValue", ThisKey="ID", OtherKey="FK_Parametrs")]
		public EntitySet<Rank_Collected_ParametrsValue> Rank_Collected_ParametrsValue
		{
			get
			{
				return this._Rank_Collected_ParametrsValue;
			}
			set
			{
				this._Rank_Collected_ParametrsValue.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_Parametrs_Rank_DifficaltPoint", Storage="_Rank_DifficaltPoint", ThisKey="ID", OtherKey="fk_parametr")]
		public EntitySet<Rank_DifficaltPoint> Rank_DifficaltPoint
		{
			get
			{
				return this._Rank_DifficaltPoint;
			}
			set
			{
				this._Rank_DifficaltPoint.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_Parametrs_Rank_Fields", Storage="_Rank_Fields", ThisKey="ID", OtherKey="FK_parametr")]
		public EntitySet<Rank_Fields> Rank_Fields
		{
			get
			{
				return this._Rank_Fields;
			}
			set
			{
				this._Rank_Fields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_Parametrs_Rank_Mark", Storage="_Rank_Mark", ThisKey="ID", OtherKey="fk_parametr")]
		public EntitySet<Rank_Mark> Rank_Mark
		{
			get
			{
				return this._Rank_Mark;
			}
			set
			{
				this._Rank_Mark.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rank_Articles(Rank_Articles entity)
		{
			this.SendPropertyChanging();
			entity.Rank_Parametrs = this;
		}
		
		private void detach_Rank_Articles(Rank_Articles entity)
		{
			this.SendPropertyChanging();
			entity.Rank_Parametrs = null;
		}
		
		private void attach_Rank_ArticleValues(Rank_ArticleValues entity)
		{
			this.SendPropertyChanging();
			entity.Rank_Parametrs = this;
		}
		
		private void detach_Rank_ArticleValues(Rank_ArticleValues entity)
		{
			this.SendPropertyChanging();
			entity.Rank_Parametrs = null;
		}
		
		private void attach_Rank_Collected_ParametrsValue(Rank_Collected_ParametrsValue entity)
		{
			this.SendPropertyChanging();
			entity.Rank_Parametrs = this;
		}
		
		private void detach_Rank_Collected_ParametrsValue(Rank_Collected_ParametrsValue entity)
		{
			this.SendPropertyChanging();
			entity.Rank_Parametrs = null;
		}
		
		private void attach_Rank_DifficaltPoint(Rank_DifficaltPoint entity)
		{
			this.SendPropertyChanging();
			entity.Rank_Parametrs = this;
		}
		
		private void detach_Rank_DifficaltPoint(Rank_DifficaltPoint entity)
		{
			this.SendPropertyChanging();
			entity.Rank_Parametrs = null;
		}
		
		private void attach_Rank_Fields(Rank_Fields entity)
		{
			this.SendPropertyChanging();
			entity.Rank_Parametrs = this;
		}
		
		private void detach_Rank_Fields(Rank_Fields entity)
		{
			this.SendPropertyChanging();
			entity.Rank_Parametrs = null;
		}
		
		private void attach_Rank_Mark(Rank_Mark entity)
		{
			this.SendPropertyChanging();
			entity.Rank_Parametrs = this;
		}
		
		private void detach_Rank_Mark(Rank_Mark entity)
		{
			this.SendPropertyChanging();
			entity.Rank_Parametrs = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rank_StructPoints")]
	public partial class Rank_StructPoints : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<int> _FK_thirdlvl;
		
		private System.Nullable<int> _FK_secondlvl;
		
		private System.Nullable<int> _FK_firstlvl;
		
		private System.Nullable<double> _Value;
		
		private EntityRef<FirstLevelSubdivisionTable> _FirstLevelSubdivisionTable;
		
		private EntityRef<SecondLevelSubdivisionTable> _SecondLevelSubdivisionTable;
		
		private EntityRef<ThirdLevelSubdivisionTable> _ThirdLevelSubdivisionTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnFK_thirdlvlChanging(System.Nullable<int> value);
    partial void OnFK_thirdlvlChanged();
    partial void OnFK_secondlvlChanging(System.Nullable<int> value);
    partial void OnFK_secondlvlChanged();
    partial void OnFK_firstlvlChanging(System.Nullable<int> value);
    partial void OnFK_firstlvlChanged();
    partial void OnValueChanging(System.Nullable<double> value);
    partial void OnValueChanged();
    #endregion
		
		public Rank_StructPoints()
		{
			this._FirstLevelSubdivisionTable = default(EntityRef<FirstLevelSubdivisionTable>);
			this._SecondLevelSubdivisionTable = default(EntityRef<SecondLevelSubdivisionTable>);
			this._ThirdLevelSubdivisionTable = default(EntityRef<ThirdLevelSubdivisionTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_thirdlvl", DbType="Int")]
		public System.Nullable<int> FK_thirdlvl
		{
			get
			{
				return this._FK_thirdlvl;
			}
			set
			{
				if ((this._FK_thirdlvl != value))
				{
					if (this._ThirdLevelSubdivisionTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_thirdlvlChanging(value);
					this.SendPropertyChanging();
					this._FK_thirdlvl = value;
					this.SendPropertyChanged("FK_thirdlvl");
					this.OnFK_thirdlvlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_secondlvl", DbType="Int")]
		public System.Nullable<int> FK_secondlvl
		{
			get
			{
				return this._FK_secondlvl;
			}
			set
			{
				if ((this._FK_secondlvl != value))
				{
					if (this._SecondLevelSubdivisionTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_secondlvlChanging(value);
					this.SendPropertyChanging();
					this._FK_secondlvl = value;
					this.SendPropertyChanged("FK_secondlvl");
					this.OnFK_secondlvlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_firstlvl", DbType="Int")]
		public System.Nullable<int> FK_firstlvl
		{
			get
			{
				return this._FK_firstlvl;
			}
			set
			{
				if ((this._FK_firstlvl != value))
				{
					if (this._FirstLevelSubdivisionTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_firstlvlChanging(value);
					this.SendPropertyChanging();
					this._FK_firstlvl = value;
					this.SendPropertyChanged("FK_firstlvl");
					this.OnFK_firstlvlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Float")]
		public System.Nullable<double> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FirstLevelSubdivisionTable_Rank_StructPoints", Storage="_FirstLevelSubdivisionTable", ThisKey="FK_firstlvl", OtherKey="FirstLevelSubdivisionTableID", IsForeignKey=true)]
		public FirstLevelSubdivisionTable FirstLevelSubdivisionTable
		{
			get
			{
				return this._FirstLevelSubdivisionTable.Entity;
			}
			set
			{
				FirstLevelSubdivisionTable previousValue = this._FirstLevelSubdivisionTable.Entity;
				if (((previousValue != value) 
							|| (this._FirstLevelSubdivisionTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FirstLevelSubdivisionTable.Entity = null;
						previousValue.Rank_StructPoints.Remove(this);
					}
					this._FirstLevelSubdivisionTable.Entity = value;
					if ((value != null))
					{
						value.Rank_StructPoints.Add(this);
						this._FK_firstlvl = value.FirstLevelSubdivisionTableID;
					}
					else
					{
						this._FK_firstlvl = default(Nullable<int>);
					}
					this.SendPropertyChanged("FirstLevelSubdivisionTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecondLevelSubdivisionTable_Rank_StructPoints", Storage="_SecondLevelSubdivisionTable", ThisKey="FK_secondlvl", OtherKey="SecondLevelSubdivisionTableID", IsForeignKey=true)]
		public SecondLevelSubdivisionTable SecondLevelSubdivisionTable
		{
			get
			{
				return this._SecondLevelSubdivisionTable.Entity;
			}
			set
			{
				SecondLevelSubdivisionTable previousValue = this._SecondLevelSubdivisionTable.Entity;
				if (((previousValue != value) 
							|| (this._SecondLevelSubdivisionTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecondLevelSubdivisionTable.Entity = null;
						previousValue.Rank_StructPoints.Remove(this);
					}
					this._SecondLevelSubdivisionTable.Entity = value;
					if ((value != null))
					{
						value.Rank_StructPoints.Add(this);
						this._FK_secondlvl = value.SecondLevelSubdivisionTableID;
					}
					else
					{
						this._FK_secondlvl = default(Nullable<int>);
					}
					this.SendPropertyChanged("SecondLevelSubdivisionTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThirdLevelSubdivisionTable_Rank_StructPoints", Storage="_ThirdLevelSubdivisionTable", ThisKey="FK_thirdlvl", OtherKey="ThirdLevelSubdivisionTableID", IsForeignKey=true)]
		public ThirdLevelSubdivisionTable ThirdLevelSubdivisionTable
		{
			get
			{
				return this._ThirdLevelSubdivisionTable.Entity;
			}
			set
			{
				ThirdLevelSubdivisionTable previousValue = this._ThirdLevelSubdivisionTable.Entity;
				if (((previousValue != value) 
							|| (this._ThirdLevelSubdivisionTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThirdLevelSubdivisionTable.Entity = null;
						previousValue.Rank_StructPoints.Remove(this);
					}
					this._ThirdLevelSubdivisionTable.Entity = value;
					if ((value != null))
					{
						value.Rank_StructPoints.Add(this);
						this._FK_thirdlvl = value.ThirdLevelSubdivisionTableID;
					}
					else
					{
						this._FK_thirdlvl = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThirdLevelSubdivisionTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rank_UserArticleMappingTable")]
	public partial class Rank_UserArticleMappingTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<int> _FK_User;
		
		private System.Nullable<int> _FK_Article;
		
		private System.Nullable<int> _FK_point;
		
		private System.Nullable<bool> _UserConfirm;
		
		private EntityRef<Rank_Articles> _Rank_Articles;
		
		private EntityRef<Rank_DifficaltPoint> _Rank_DifficaltPoint;
		
		private EntityRef<UsersTable> _UsersTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnFK_UserChanging(System.Nullable<int> value);
    partial void OnFK_UserChanged();
    partial void OnFK_ArticleChanging(System.Nullable<int> value);
    partial void OnFK_ArticleChanged();
    partial void OnFK_pointChanging(System.Nullable<int> value);
    partial void OnFK_pointChanged();
    partial void OnUserConfirmChanging(System.Nullable<bool> value);
    partial void OnUserConfirmChanged();
    #endregion
		
		public Rank_UserArticleMappingTable()
		{
			this._Rank_Articles = default(EntityRef<Rank_Articles>);
			this._Rank_DifficaltPoint = default(EntityRef<Rank_DifficaltPoint>);
			this._UsersTable = default(EntityRef<UsersTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_User", DbType="Int")]
		public System.Nullable<int> FK_User
		{
			get
			{
				return this._FK_User;
			}
			set
			{
				if ((this._FK_User != value))
				{
					if (this._UsersTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_UserChanging(value);
					this.SendPropertyChanging();
					this._FK_User = value;
					this.SendPropertyChanged("FK_User");
					this.OnFK_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Article", DbType="Int")]
		public System.Nullable<int> FK_Article
		{
			get
			{
				return this._FK_Article;
			}
			set
			{
				if ((this._FK_Article != value))
				{
					if (this._Rank_Articles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_ArticleChanging(value);
					this.SendPropertyChanging();
					this._FK_Article = value;
					this.SendPropertyChanged("FK_Article");
					this.OnFK_ArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_point", DbType="Int")]
		public System.Nullable<int> FK_point
		{
			get
			{
				return this._FK_point;
			}
			set
			{
				if ((this._FK_point != value))
				{
					if (this._Rank_DifficaltPoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_pointChanging(value);
					this.SendPropertyChanging();
					this._FK_point = value;
					this.SendPropertyChanged("FK_point");
					this.OnFK_pointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserConfirm", DbType="Bit")]
		public System.Nullable<bool> UserConfirm
		{
			get
			{
				return this._UserConfirm;
			}
			set
			{
				if ((this._UserConfirm != value))
				{
					this.OnUserConfirmChanging(value);
					this.SendPropertyChanging();
					this._UserConfirm = value;
					this.SendPropertyChanged("UserConfirm");
					this.OnUserConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_Articles_Rank_UserArticleMappingTable", Storage="_Rank_Articles", ThisKey="FK_Article", OtherKey="ID", IsForeignKey=true)]
		public Rank_Articles Rank_Articles
		{
			get
			{
				return this._Rank_Articles.Entity;
			}
			set
			{
				Rank_Articles previousValue = this._Rank_Articles.Entity;
				if (((previousValue != value) 
							|| (this._Rank_Articles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rank_Articles.Entity = null;
						previousValue.Rank_UserArticleMappingTable.Remove(this);
					}
					this._Rank_Articles.Entity = value;
					if ((value != null))
					{
						value.Rank_UserArticleMappingTable.Add(this);
						this._FK_Article = value.ID;
					}
					else
					{
						this._FK_Article = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rank_Articles");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rank_DifficaltPoint_Rank_UserArticleMappingTable", Storage="_Rank_DifficaltPoint", ThisKey="FK_point", OtherKey="ID", IsForeignKey=true)]
		public Rank_DifficaltPoint Rank_DifficaltPoint
		{
			get
			{
				return this._Rank_DifficaltPoint.Entity;
			}
			set
			{
				Rank_DifficaltPoint previousValue = this._Rank_DifficaltPoint.Entity;
				if (((previousValue != value) 
							|| (this._Rank_DifficaltPoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rank_DifficaltPoint.Entity = null;
						previousValue.Rank_UserArticleMappingTable.Remove(this);
					}
					this._Rank_DifficaltPoint.Entity = value;
					if ((value != null))
					{
						value.Rank_UserArticleMappingTable.Add(this);
						this._FK_point = value.ID;
					}
					else
					{
						this._FK_point = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rank_DifficaltPoint");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsersTable_Rank_UserArticleMappingTable", Storage="_UsersTable", ThisKey="FK_User", OtherKey="UsersTableID", IsForeignKey=true)]
		public UsersTable UsersTable
		{
			get
			{
				return this._UsersTable.Entity;
			}
			set
			{
				UsersTable previousValue = this._UsersTable.Entity;
				if (((previousValue != value) 
							|| (this._UsersTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UsersTable.Entity = null;
						previousValue.Rank_UserArticleMappingTable.Remove(this);
					}
					this._UsersTable.Entity = value;
					if ((value != null))
					{
						value.Rank_UserArticleMappingTable.Add(this);
						this._FK_User = value.UsersTableID;
					}
					else
					{
						this._FK_User = default(Nullable<int>);
					}
					this.SendPropertyChanged("UsersTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rank_UserParametrValue")]
	public partial class Rank_UserParametrValue
	{
		
		private int _ID;
		
		private System.Nullable<int> _FK_parametr;
		
		private System.Nullable<int> _FK_user;
		
		private System.Nullable<double> _Value;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<bool> _Active;
		
		public Rank_UserParametrValue()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_parametr", DbType="Int")]
		public System.Nullable<int> FK_parametr
		{
			get
			{
				return this._FK_parametr;
			}
			set
			{
				if ((this._FK_parametr != value))
				{
					this._FK_parametr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_user", DbType="Int")]
		public System.Nullable<int> FK_user
		{
			get
			{
				return this._FK_user;
			}
			set
			{
				if ((this._FK_user != value))
				{
					this._FK_user = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Float")]
		public System.Nullable<double> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsersTable")]
	public partial class UsersTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UsersTableID;
		
		private bool _Active;
		
		private string _Login;
		
		private string _Password;
		
		private string _Email;
		
		private string _Surname;
		
		private string _Name;
		
		private string _Patronimyc;
		
		private System.Nullable<int> _FK_FirstLevelSubdivisionTable;
		
		private System.Nullable<int> _FK_SecondLevelSubdivisionTable;
		
		private System.Nullable<int> _FK_ThirdLevelSubdivisionTable;
		
		private System.Nullable<int> _FK_FourthLevelSubdivisionTable;
		
		private System.Nullable<int> _FK_FifthLevelSubdivisionTable;
		
		private System.Nullable<int> _AccessLevel;
		
		private System.Nullable<int> _FK_ZeroLevelSubdivisionTable;
		
		private string _PassCode;
		
		private System.Nullable<bool> _Confirmed;
		
		private System.Nullable<bool> _Data_Status;
		
		private string _Position;
		
		private string _AcademicDegree;
		
		private System.Nullable<int> _EducationForm;
		
		private System.Nullable<int> _Kurs;
		
		private System.Nullable<int> _FK_Specialization;
		
		private System.Nullable<int> _FK_StudentGroup;
		
		private EntitySet<Rank_Collected_ParametrsValue> _Rank_Collected_ParametrsValue;
		
		private EntitySet<Rank_UserArticleMappingTable> _Rank_UserArticleMappingTable;
		
		private EntityRef<FirstLevelSubdivisionTable> _FirstLevelSubdivisionTable;
		
		private EntityRef<SecondLevelSubdivisionTable> _SecondLevelSubdivisionTable;
		
		private EntityRef<ThirdLevelSubdivisionTable> _ThirdLevelSubdivisionTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsersTableIDChanging(int value);
    partial void OnUsersTableIDChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPatronimycChanging(string value);
    partial void OnPatronimycChanged();
    partial void OnFK_FirstLevelSubdivisionTableChanging(System.Nullable<int> value);
    partial void OnFK_FirstLevelSubdivisionTableChanged();
    partial void OnFK_SecondLevelSubdivisionTableChanging(System.Nullable<int> value);
    partial void OnFK_SecondLevelSubdivisionTableChanged();
    partial void OnFK_ThirdLevelSubdivisionTableChanging(System.Nullable<int> value);
    partial void OnFK_ThirdLevelSubdivisionTableChanged();
    partial void OnFK_FourthLevelSubdivisionTableChanging(System.Nullable<int> value);
    partial void OnFK_FourthLevelSubdivisionTableChanged();
    partial void OnFK_FifthLevelSubdivisionTableChanging(System.Nullable<int> value);
    partial void OnFK_FifthLevelSubdivisionTableChanged();
    partial void OnAccessLevelChanging(System.Nullable<int> value);
    partial void OnAccessLevelChanged();
    partial void OnFK_ZeroLevelSubdivisionTableChanging(System.Nullable<int> value);
    partial void OnFK_ZeroLevelSubdivisionTableChanged();
    partial void OnPassCodeChanging(string value);
    partial void OnPassCodeChanged();
    partial void OnConfirmedChanging(System.Nullable<bool> value);
    partial void OnConfirmedChanged();
    partial void OnData_StatusChanging(System.Nullable<bool> value);
    partial void OnData_StatusChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnAcademicDegreeChanging(string value);
    partial void OnAcademicDegreeChanged();
    partial void OnEducationFormChanging(System.Nullable<int> value);
    partial void OnEducationFormChanged();
    partial void OnKursChanging(System.Nullable<int> value);
    partial void OnKursChanged();
    partial void OnFK_SpecializationChanging(System.Nullable<int> value);
    partial void OnFK_SpecializationChanged();
    partial void OnFK_StudentGroupChanging(System.Nullable<int> value);
    partial void OnFK_StudentGroupChanged();
    #endregion
		
		public UsersTable()
		{
			this._Rank_Collected_ParametrsValue = new EntitySet<Rank_Collected_ParametrsValue>(new Action<Rank_Collected_ParametrsValue>(this.attach_Rank_Collected_ParametrsValue), new Action<Rank_Collected_ParametrsValue>(this.detach_Rank_Collected_ParametrsValue));
			this._Rank_UserArticleMappingTable = new EntitySet<Rank_UserArticleMappingTable>(new Action<Rank_UserArticleMappingTable>(this.attach_Rank_UserArticleMappingTable), new Action<Rank_UserArticleMappingTable>(this.detach_Rank_UserArticleMappingTable));
			this._FirstLevelSubdivisionTable = default(EntityRef<FirstLevelSubdivisionTable>);
			this._SecondLevelSubdivisionTable = default(EntityRef<SecondLevelSubdivisionTable>);
			this._ThirdLevelSubdivisionTable = default(EntityRef<ThirdLevelSubdivisionTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsersTableID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UsersTableID
		{
			get
			{
				return this._UsersTableID;
			}
			set
			{
				if ((this._UsersTableID != value))
				{
					this.OnUsersTableIDChanging(value);
					this.SendPropertyChanging();
					this._UsersTableID = value;
					this.SendPropertyChanged("UsersTableID");
					this.OnUsersTableIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(50)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Patronimyc", DbType="NVarChar(50)")]
		public string Patronimyc
		{
			get
			{
				return this._Patronimyc;
			}
			set
			{
				if ((this._Patronimyc != value))
				{
					this.OnPatronimycChanging(value);
					this.SendPropertyChanging();
					this._Patronimyc = value;
					this.SendPropertyChanged("Patronimyc");
					this.OnPatronimycChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_FirstLevelSubdivisionTable", DbType="Int")]
		public System.Nullable<int> FK_FirstLevelSubdivisionTable
		{
			get
			{
				return this._FK_FirstLevelSubdivisionTable;
			}
			set
			{
				if ((this._FK_FirstLevelSubdivisionTable != value))
				{
					if (this._FirstLevelSubdivisionTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_FirstLevelSubdivisionTableChanging(value);
					this.SendPropertyChanging();
					this._FK_FirstLevelSubdivisionTable = value;
					this.SendPropertyChanged("FK_FirstLevelSubdivisionTable");
					this.OnFK_FirstLevelSubdivisionTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_SecondLevelSubdivisionTable", DbType="Int")]
		public System.Nullable<int> FK_SecondLevelSubdivisionTable
		{
			get
			{
				return this._FK_SecondLevelSubdivisionTable;
			}
			set
			{
				if ((this._FK_SecondLevelSubdivisionTable != value))
				{
					if (this._SecondLevelSubdivisionTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_SecondLevelSubdivisionTableChanging(value);
					this.SendPropertyChanging();
					this._FK_SecondLevelSubdivisionTable = value;
					this.SendPropertyChanged("FK_SecondLevelSubdivisionTable");
					this.OnFK_SecondLevelSubdivisionTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_ThirdLevelSubdivisionTable", DbType="Int")]
		public System.Nullable<int> FK_ThirdLevelSubdivisionTable
		{
			get
			{
				return this._FK_ThirdLevelSubdivisionTable;
			}
			set
			{
				if ((this._FK_ThirdLevelSubdivisionTable != value))
				{
					if (this._ThirdLevelSubdivisionTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_ThirdLevelSubdivisionTableChanging(value);
					this.SendPropertyChanging();
					this._FK_ThirdLevelSubdivisionTable = value;
					this.SendPropertyChanged("FK_ThirdLevelSubdivisionTable");
					this.OnFK_ThirdLevelSubdivisionTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_FourthLevelSubdivisionTable", DbType="Int")]
		public System.Nullable<int> FK_FourthLevelSubdivisionTable
		{
			get
			{
				return this._FK_FourthLevelSubdivisionTable;
			}
			set
			{
				if ((this._FK_FourthLevelSubdivisionTable != value))
				{
					this.OnFK_FourthLevelSubdivisionTableChanging(value);
					this.SendPropertyChanging();
					this._FK_FourthLevelSubdivisionTable = value;
					this.SendPropertyChanged("FK_FourthLevelSubdivisionTable");
					this.OnFK_FourthLevelSubdivisionTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_FifthLevelSubdivisionTable", DbType="Int")]
		public System.Nullable<int> FK_FifthLevelSubdivisionTable
		{
			get
			{
				return this._FK_FifthLevelSubdivisionTable;
			}
			set
			{
				if ((this._FK_FifthLevelSubdivisionTable != value))
				{
					this.OnFK_FifthLevelSubdivisionTableChanging(value);
					this.SendPropertyChanging();
					this._FK_FifthLevelSubdivisionTable = value;
					this.SendPropertyChanged("FK_FifthLevelSubdivisionTable");
					this.OnFK_FifthLevelSubdivisionTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessLevel", DbType="Int")]
		public System.Nullable<int> AccessLevel
		{
			get
			{
				return this._AccessLevel;
			}
			set
			{
				if ((this._AccessLevel != value))
				{
					this.OnAccessLevelChanging(value);
					this.SendPropertyChanging();
					this._AccessLevel = value;
					this.SendPropertyChanged("AccessLevel");
					this.OnAccessLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_ZeroLevelSubdivisionTable", DbType="Int")]
		public System.Nullable<int> FK_ZeroLevelSubdivisionTable
		{
			get
			{
				return this._FK_ZeroLevelSubdivisionTable;
			}
			set
			{
				if ((this._FK_ZeroLevelSubdivisionTable != value))
				{
					this.OnFK_ZeroLevelSubdivisionTableChanging(value);
					this.SendPropertyChanging();
					this._FK_ZeroLevelSubdivisionTable = value;
					this.SendPropertyChanged("FK_ZeroLevelSubdivisionTable");
					this.OnFK_ZeroLevelSubdivisionTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassCode", DbType="VarChar(50)")]
		public string PassCode
		{
			get
			{
				return this._PassCode;
			}
			set
			{
				if ((this._PassCode != value))
				{
					this.OnPassCodeChanging(value);
					this.SendPropertyChanging();
					this._PassCode = value;
					this.SendPropertyChanged("PassCode");
					this.OnPassCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Confirmed", DbType="Bit")]
		public System.Nullable<bool> Confirmed
		{
			get
			{
				return this._Confirmed;
			}
			set
			{
				if ((this._Confirmed != value))
				{
					this.OnConfirmedChanging(value);
					this.SendPropertyChanging();
					this._Confirmed = value;
					this.SendPropertyChanged("Confirmed");
					this.OnConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Status", DbType="Bit")]
		public System.Nullable<bool> Data_Status
		{
			get
			{
				return this._Data_Status;
			}
			set
			{
				if ((this._Data_Status != value))
				{
					this.OnData_StatusChanging(value);
					this.SendPropertyChanging();
					this._Data_Status = value;
					this.SendPropertyChanged("Data_Status");
					this.OnData_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(500)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcademicDegree", DbType="NVarChar(50)")]
		public string AcademicDegree
		{
			get
			{
				return this._AcademicDegree;
			}
			set
			{
				if ((this._AcademicDegree != value))
				{
					this.OnAcademicDegreeChanging(value);
					this.SendPropertyChanging();
					this._AcademicDegree = value;
					this.SendPropertyChanged("AcademicDegree");
					this.OnAcademicDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationForm", DbType="Int")]
		public System.Nullable<int> EducationForm
		{
			get
			{
				return this._EducationForm;
			}
			set
			{
				if ((this._EducationForm != value))
				{
					this.OnEducationFormChanging(value);
					this.SendPropertyChanging();
					this._EducationForm = value;
					this.SendPropertyChanged("EducationForm");
					this.OnEducationFormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kurs", DbType="Int")]
		public System.Nullable<int> Kurs
		{
			get
			{
				return this._Kurs;
			}
			set
			{
				if ((this._Kurs != value))
				{
					this.OnKursChanging(value);
					this.SendPropertyChanging();
					this._Kurs = value;
					this.SendPropertyChanged("Kurs");
					this.OnKursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Specialization", DbType="Int")]
		public System.Nullable<int> FK_Specialization
		{
			get
			{
				return this._FK_Specialization;
			}
			set
			{
				if ((this._FK_Specialization != value))
				{
					this.OnFK_SpecializationChanging(value);
					this.SendPropertyChanging();
					this._FK_Specialization = value;
					this.SendPropertyChanged("FK_Specialization");
					this.OnFK_SpecializationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_StudentGroup", DbType="Int")]
		public System.Nullable<int> FK_StudentGroup
		{
			get
			{
				return this._FK_StudentGroup;
			}
			set
			{
				if ((this._FK_StudentGroup != value))
				{
					this.OnFK_StudentGroupChanging(value);
					this.SendPropertyChanging();
					this._FK_StudentGroup = value;
					this.SendPropertyChanged("FK_StudentGroup");
					this.OnFK_StudentGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsersTable_Rank_Collected_ParametrsValue", Storage="_Rank_Collected_ParametrsValue", ThisKey="UsersTableID", OtherKey="FK_Autor")]
		public EntitySet<Rank_Collected_ParametrsValue> Rank_Collected_ParametrsValue
		{
			get
			{
				return this._Rank_Collected_ParametrsValue;
			}
			set
			{
				this._Rank_Collected_ParametrsValue.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsersTable_Rank_UserArticleMappingTable", Storage="_Rank_UserArticleMappingTable", ThisKey="UsersTableID", OtherKey="FK_User")]
		public EntitySet<Rank_UserArticleMappingTable> Rank_UserArticleMappingTable
		{
			get
			{
				return this._Rank_UserArticleMappingTable;
			}
			set
			{
				this._Rank_UserArticleMappingTable.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FirstLevelSubdivisionTable_UsersTable", Storage="_FirstLevelSubdivisionTable", ThisKey="FK_FirstLevelSubdivisionTable", OtherKey="FirstLevelSubdivisionTableID", IsForeignKey=true)]
		public FirstLevelSubdivisionTable FirstLevelSubdivisionTable
		{
			get
			{
				return this._FirstLevelSubdivisionTable.Entity;
			}
			set
			{
				FirstLevelSubdivisionTable previousValue = this._FirstLevelSubdivisionTable.Entity;
				if (((previousValue != value) 
							|| (this._FirstLevelSubdivisionTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FirstLevelSubdivisionTable.Entity = null;
						previousValue.UsersTable.Remove(this);
					}
					this._FirstLevelSubdivisionTable.Entity = value;
					if ((value != null))
					{
						value.UsersTable.Add(this);
						this._FK_FirstLevelSubdivisionTable = value.FirstLevelSubdivisionTableID;
					}
					else
					{
						this._FK_FirstLevelSubdivisionTable = default(Nullable<int>);
					}
					this.SendPropertyChanged("FirstLevelSubdivisionTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecondLevelSubdivisionTable_UsersTable", Storage="_SecondLevelSubdivisionTable", ThisKey="FK_SecondLevelSubdivisionTable", OtherKey="SecondLevelSubdivisionTableID", IsForeignKey=true)]
		public SecondLevelSubdivisionTable SecondLevelSubdivisionTable
		{
			get
			{
				return this._SecondLevelSubdivisionTable.Entity;
			}
			set
			{
				SecondLevelSubdivisionTable previousValue = this._SecondLevelSubdivisionTable.Entity;
				if (((previousValue != value) 
							|| (this._SecondLevelSubdivisionTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecondLevelSubdivisionTable.Entity = null;
						previousValue.UsersTable.Remove(this);
					}
					this._SecondLevelSubdivisionTable.Entity = value;
					if ((value != null))
					{
						value.UsersTable.Add(this);
						this._FK_SecondLevelSubdivisionTable = value.SecondLevelSubdivisionTableID;
					}
					else
					{
						this._FK_SecondLevelSubdivisionTable = default(Nullable<int>);
					}
					this.SendPropertyChanged("SecondLevelSubdivisionTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThirdLevelSubdivisionTable_UsersTable", Storage="_ThirdLevelSubdivisionTable", ThisKey="FK_ThirdLevelSubdivisionTable", OtherKey="ThirdLevelSubdivisionTableID", IsForeignKey=true)]
		public ThirdLevelSubdivisionTable ThirdLevelSubdivisionTable
		{
			get
			{
				return this._ThirdLevelSubdivisionTable.Entity;
			}
			set
			{
				ThirdLevelSubdivisionTable previousValue = this._ThirdLevelSubdivisionTable.Entity;
				if (((previousValue != value) 
							|| (this._ThirdLevelSubdivisionTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThirdLevelSubdivisionTable.Entity = null;
						previousValue.UsersTable.Remove(this);
					}
					this._ThirdLevelSubdivisionTable.Entity = value;
					if ((value != null))
					{
						value.UsersTable.Add(this);
						this._FK_ThirdLevelSubdivisionTable = value.ThirdLevelSubdivisionTableID;
					}
					else
					{
						this._FK_ThirdLevelSubdivisionTable = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThirdLevelSubdivisionTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rank_Collected_ParametrsValue(Rank_Collected_ParametrsValue entity)
		{
			this.SendPropertyChanging();
			entity.UsersTable = this;
		}
		
		private void detach_Rank_Collected_ParametrsValue(Rank_Collected_ParametrsValue entity)
		{
			this.SendPropertyChanging();
			entity.UsersTable = null;
		}
		
		private void attach_Rank_UserArticleMappingTable(Rank_UserArticleMappingTable entity)
		{
			this.SendPropertyChanging();
			entity.UsersTable = this;
		}
		
		private void detach_Rank_UserArticleMappingTable(Rank_UserArticleMappingTable entity)
		{
			this.SendPropertyChanging();
			entity.UsersTable = null;
		}
	}
}
#pragma warning restore 1591
